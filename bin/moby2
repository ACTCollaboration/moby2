#!/usr/bin/env python
from __future__ import print_function
from __future__ import absolute_import
from past.builtins import basestring

import sys

specials  = [
    '_auto_script',
    '_auto_list',
]
scripts = [
    'get_tod_spec',
    'get_fpfit_planetcal',
    'get_map_planetcal',
    'get_fiducial',
    'fp_realign',
    'get_cal_noise',
    'fit_planet_cal',
    'refit_planet_cal',
    'get_array_sens',
    'obs_catalog',
    'get_solid_angle'
]

def exit_error(err, message):
    sys.stderr.write(message)
    sys.exit(err)

if len(sys.argv) <= 1:
    cmd = None
else:
    cmd = sys.argv[1]

if cmd not in scripts and cmd not in specials:
    text = ('moby2: first argument must be one of these commands:\n' +
            ''.join(['  %s\n' % x for x in scripts if x[0] != '_']) + '\n')
    text = text + 'Special commands:\n' + ' '.join(specials) + '\n\n'
    sys.stderr.write(text)

if cmd == '_auto_list':
    print(' '.join(scripts))
elif cmd == '_auto_script':
    print("""
_moby2()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="$( moby2 _auto_list )"

    if [[ ${prev} == "moby2" ]]
    then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    else
	# Get .dict for other args.
	COMPREPLY=( $(compgen -W "`ls *in *cfg *dict 2> /dev/null`" -- ${cur}) )
    fi
    return 0

}
complete -F _moby2 moby2
""")

elif cmd == 'get_tod_spec':
    from moby2.analysis import det_sens
    det_sens.get_tod_spec_main(sys.argv[2:])

elif cmd == 'get_fpfit_planetcal':
    from moby2.analysis import det_sens
    det_sens.get_fpfit_planetcal(sys.argv[2:])

elif cmd == 'get_map_planetcal':
    from moby2.analysis import det_sens
    det_sens.get_map_planetcal(sys.argv[2:])

elif cmd == 'get_fiducial':
    from moby2.analysis import fp_fit
    fp_fit.flatfield.get_fiducial_main(sys.argv[2:])

elif cmd == 'fp_realign':
    from moby2.analysis import fp_fit
    fp_fit.realign.main(sys.argv[2:])

elif cmd == 'get_cal_noise':
    from moby2.analysis import det_sens
    det_sens.get_cal_noise(sys.argv[2:])

elif cmd == 'fit_planet_cal':
    from moby2.analysis import det_sens
    det_sens.fit_planet_cal.main(sys.argv[2:])

elif cmd == 'refit_planet_cal':
    from moby2.analysis import det_sens
    det_sens.refit_planet_cal.main(sys.argv[2:])

elif cmd == 'get_array_sens':
    from moby2.analysis import det_sens
    det_sens.array_sens.main(sys.argv[2:])

elif cmd == 'obs_catalog':
    from moby2.util import catalog
    catalog.main(sys.argv[2:])

elif cmd == 'get_solid_angle':
    from moby2.analysis import beam_ana
    beam_ana.solid_angle.driver(sys.argv[2:])

else:
    raise RuntimeError("Unimplemented command %s" % cmd)
